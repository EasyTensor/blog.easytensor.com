apiVersion: v1
kind: Namespace
metadata:
  name: blog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easytensor-blog
      service: blog
  template:
    metadata:
      labels:
        app: easytensor-blog
        service: blog
    spec:
      containers:
        - name: blog
          image: easytensor/blog
          ports:
            - name: http
              containerPort: 8000
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 1
            periodSeconds: 10
            initialDelaySeconds: 180
          imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  namespace: blog
  name: blog-service
spec:
  selector:
    app: easytensor-blog
    service: blog
  ports:
    - protocol: TCP
      port: 8000
      name: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-http-ingress
  namespace: blog
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  tls:
    - hosts:
        - blog.easytensor.com
      secretName: blog-easytensor-tls
  rules:
    - host: blog.easytensor.com
      http:
        paths:
          - path: /*
            backend:
              serviceName: blog-service
              servicePort: http
